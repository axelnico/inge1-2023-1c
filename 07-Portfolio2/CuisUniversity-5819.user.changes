

----QUIT----(26 May 2023 20:53:32) CuisUniversity-5819.image priorSource: 4873322!

----STARTUP---- (26 May 2023 20:53:33) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5819.image!


----QUIT----(26 May 2023 20:53:33) CuisUniversity-5819.image priorSource: 9302089!

----STARTUP---- (26 May 2023 21:33:36) as /Users/nico/Documents/inge1/cuis-images/macos64/CuisUniversity-5819.image!


----End fileIn of /Users/nico/Documents/inge1/inge1-2023-1c/07-Portfolio2/Portfolio-Solucion.st----!

!testRun: #TransferTest #test01 stamp: 'NB 5/26/2023 21:34:41'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 21:34:41'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 21:34:41'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 21:34:41'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 21:34:41'!
PASSED!

!methodRemoval: Deposit #transfer stamp: 'NB 5/26/2023 21:35:30'!
transfer
	 ^transfer!

!testRun: #TransferTest #test01 stamp: 'NB 5/26/2023 21:35:33'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 21:35:33'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 21:35:33'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 21:35:33'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 21:35:33'!
PASSED!

!methodRemoval: Withdraw #transfer stamp: 'NB 5/26/2023 21:35:41'!
transfer
	^transfer.!

!methodRemoval: Deposit #transfer: stamp: 'NB 5/26/2023 21:35:46'!
transfer: aTransfer
	 transfer := aTransfer.!

!methodRemoval: Withdraw #transfer: stamp: 'NB 5/26/2023 21:35:51'!
transfer: aTransfer
	transfer := aTransfer. !

!testRun: #TransferTest #test01 stamp: 'NB 5/26/2023 21:35:54'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 21:35:54'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 21:35:54'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 21:35:54'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 21:35:54'!
PASSED!

!classDefinition: #Deposit category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:36:20'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:36:26'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #TransferTest #test01 stamp: 'NB 5/26/2023 21:36:33'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 21:36:33'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 21:36:33'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 21:36:33'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 21:36:33'!
PASSED!

Object subclass: #TransferEnd
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferEnd category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:44:10'!
Object subclass: #TransferEnd
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferEnd subclass: #TransferReceiver
	instanceVariableNames: 'account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferReceiver category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:44:35'!
TransferEnd subclass: #TransferReceiver
	instanceVariableNames: 'account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferReceiver category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:44:49'!
TransferEnd subclass: #TransferReceiver
	instanceVariableNames: 'transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferEnd category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:44:49'!
Object subclass: #TransferEnd
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferReceiver category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:45:03'!
TransferEnd subclass: #TransferReceiver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferEnd category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:45:03'!
Object subclass: #TransferEnd
	instanceVariableNames: 'account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #TransferSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferSender category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:45:12'!
Object subclass: #TransferSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

TransferEnd subclass: #TransferSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferSender category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:45:19'!
TransferEnd subclass: #TransferSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferEnd methodsFor: 'as yet unclassified' stamp: 'NB 5/26/2023 21:46:46'!
initializeWith: aTransfer for: aSenderAccount
	transfer:= aTransfer.
	account := aSenderAccount.
	account register: self.! !

!methodRemoval: TransferReceiver #initializeWith:for: stamp: 'NB 5/26/2023 21:46:46'!
initializeWith: aTransfer for: aSenderAccount
	transfer:= aTransfer.
	account := aSenderAccount.
	account register: self.!

!methodRemoval: TransferSender #initializeWith:for: stamp: 'NB 5/26/2023 21:46:46'!
initializeWith: aTransfer for: aSenderAccount
	transfer:= aTransfer.
	account := aSenderAccount.
	account register: self.!
!TransferEnd methodsFor: 'as yet unclassified' stamp: 'NB 5/26/2023 21:47:10' prior: 50623444!
initializeWith: aTransfer for: anAccount
	transfer:= aTransfer.
	account := anAccount.
	account register: self.! !
!TransferEnd methodsFor: 'as yet unclassified' stamp: 'NB 5/26/2023 21:47:18' prior: 50623464!
initializeWith: aTransfer for: anAccount

	transfer:= aTransfer.
	account := anAccount.
	account register: self.! !
!TransferEnd class methodsFor: 'as yet unclassified' stamp: 'NB 5/26/2023 21:48:05'!
register: aTransfer on: aSenderAccount
	^ self new initializeWith: aTransfer for: aSenderAccount! !

!methodRemoval: TransferReceiver class #register:on: stamp: 'NB 5/26/2023 21:48:05'!
register: aTransfer on: aSenderAccount
	^ self new initializeWith: aTransfer for: aSenderAccount!

!methodRemoval: TransferSender class #register:on: stamp: 'NB 5/26/2023 21:48:05'!
register: aTransfer on: aSenderAccount
	^ self new initializeWith: aTransfer for: aSenderAccount!
!TransferEnd class methodsFor: 'as yet unclassified' stamp: 'NB 5/26/2023 21:48:20' prior: 50623478!
register: aTransfer on: anAccount
	^ self new initializeWith: aTransfer for: anAccount! !
!TransferEnd class methodsFor: 'as yet unclassified' stamp: 'NB 5/26/2023 21:48:23' prior: 50623496!
register: aTransfer on: anAccount

	^ self new initializeWith: aTransfer for: anAccount! !

!testRun: #TransferTest #test01 stamp: 'NB 5/26/2023 21:48:41'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 21:48:41'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 21:48:41'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 21:48:41'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 21:48:41'!
PASSED!

AccountTransaction subclass: #TransferEnd
	instanceVariableNames: 'account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferEnd category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 21:49:16'!
AccountTransaction subclass: #TransferEnd
	instanceVariableNames: 'account transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferEnd methodsFor: 'as yet unclassified' stamp: 'NB 5/26/2023 21:50:19' overrides: 50623032!
value

	^transfer amount. ! !
!TransferEnd methodsFor: 'accessing' stamp: 'NB 5/26/2023 21:50:39'!
transfer
	^transfer.! !

!methodRemoval: TransferSender #transfer stamp: 'NB 5/26/2023 21:50:39'!
transfer
	^transfer.!

!methodRemoval: TransferReceiver #transfer stamp: 'NB 5/26/2023 21:50:39'!
transfer
	^transfer.!
!TransferEnd methodsFor: 'value' stamp: 'NB 5/26/2023 21:51:50' prior: 50623533 overrides: 50623032!
value

	^self transfer amount. ! !
!TransferReceiver methodsFor: 'balance' stamp: 'NB 5/26/2023 21:52:26' prior: 50623218 overrides: 50623036!
affectBalance: aBalance

	^aBalance + self transfer amount. ! !
!TransferSender methodsFor: 'balance' stamp: 'NB 5/26/2023 21:52:36' prior: 50623258 overrides: 50623036!
affectBalance: aBalance

	^aBalance - self transfer amount. ! !

!testRun: #TransferTest #test01 stamp: 'NB 5/26/2023 21:52:41'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 21:52:41'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 21:52:41'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 21:52:41'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 21:52:41'!
PASSED!

----SNAPSHOT----(26 May 2023 21:52:45) CuisUniversity-5819.image priorSource: 9302310!

----SNAPSHOT----(26 May 2023 22:06:00) CuisUniversity-5819.image priorSource: 9341548!

!classRenamed: #TransferEnd as: #TransferTransaction stamp: 'NB 5/26/2023 22:37:23'!
Smalltalk renameClassNamed: #TransferEnd as: #TransferTransaction!

!classRenamed: #TransferReceiver as: #TransferReception stamp: 'NB 5/26/2023 22:37:32'!
Smalltalk renameClassNamed: #TransferReceiver as: #TransferReception!
!Transfer methodsFor: 'as yet unclassified' stamp: 'NB 5/26/2023 22:37:32' prior: 50623166!
initializeFor: anAmountToTransfer from: aAccountToWithdraw to: accountToDeposit 

	amount := anAmountToTransfer.
	sender := TransferSender  register: self on: aAccountToWithdraw.
	receiver := TransferReception  register: self on: accountToDeposit.
	! !

!classRenamed: #TransferSender as: #TransferSending stamp: 'NB 5/26/2023 22:37:45'!
Smalltalk renameClassNamed: #TransferSender as: #TransferSending!
!Transfer methodsFor: 'as yet unclassified' stamp: 'NB 5/26/2023 22:37:45' prior: 50623590!
initializeFor: anAmountToTransfer from: aAccountToWithdraw to: accountToDeposit 

	amount := anAmountToTransfer.
	sender := TransferSending  register: self on: aAccountToWithdraw.
	receiver := TransferReception  register: self on: accountToDeposit.
	! !

!testRun: #TransferTest #test01 stamp: 'NB 5/26/2023 22:37:51'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 22:37:51'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 22:37:51'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 22:37:51'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 22:37:51'!
PASSED!

!classRenamed: #AccountTransaction as: #Transaction stamp: 'NB 5/26/2023 22:38:35'!
Smalltalk renameClassNamed: #AccountTransaction as: #Transaction!

Transaction subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 22:38:54'!
Transaction subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 22:39:03'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 22:39:10'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Deposit category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 22:39:42'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Withdraw category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 22:39:46'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransaction methodsFor: 'value' stamp: 'NB 5/26/2023 22:39:55' overrides: 50623032!
value

	^ value! !

!methodRemoval: Deposit #value stamp: 'NB 5/26/2023 22:39:55'!
value

	^ value!

!methodRemoval: Withdraw #value stamp: 'NB 5/26/2023 22:39:55'!
value

	^ value!

Transaction subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountTransaction category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 22:40:07'!
Transaction subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountTransaction methodsFor: 'initialization' stamp: 'NB 5/26/2023 22:40:30'!
initializeFor: aValue

	value := aValue ! !

!methodRemoval: Deposit #initializeFor: stamp: 'NB 5/26/2023 22:40:30'!
initializeFor: aValue

	value := aValue !

!methodRemoval: Withdraw #initializeFor: stamp: 'NB 5/26/2023 22:40:30'!
initializeFor: aValue

	value := aValue !
!AccountTransaction class methodsFor: 'no messages' stamp: 'NB 5/26/2023 22:42:48' overrides: 50623050!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!methodRemoval: Transaction class #register:on: stamp: 'NB 5/26/2023 22:43:02'!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'NB 5/26/2023 22:43:38'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: Deposit class #for: stamp: 'NB 5/26/2023 22:43:38'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: Withdraw class #for: stamp: 'NB 5/26/2023 22:43:38'!
for: aValue

	^ self new initializeFor: aValue !
!TransferReception methodsFor: 'balance' stamp: 'NB 5/26/2023 22:46:04' prior: 50623552 overrides: 50623036!
affectBalance: aBalance

	^aBalance + self value. ! !
!TransferSending methodsFor: 'balance' stamp: 'NB 5/26/2023 22:46:11' prior: 50623558 overrides: 50623036!
affectBalance: aBalance

	^aBalance - self value. ! !
!Deposit methodsFor: 'balance' stamp: 'NB 5/26/2023 22:46:27' prior: 50623079 overrides: 50623036!
affectBalance: aBalance

	^aBalance + self value ! !
!Withdraw methodsFor: 'balance' stamp: 'NB 5/26/2023 22:46:32' prior: 50623125 overrides: 50623036!
affectBalance: aBalance

	^aBalance - self value! !
!TransferTransaction class methodsFor: 'instance creation' stamp: 'NB 5/26/2023 22:47:34' prior: 50623502!
register: aTransfer on: anAccount


	| transferTransaction |
	
	transferTransaction := self new initializeWith: aTransfer for: anAccount.
	anAccount register: transferTransaction.
		
	^ transferTransaction.

	! !
!TransferTransaction methodsFor: 'initialization' stamp: 'NB 5/26/2023 22:47:42' prior: 50623471!
initializeWith: aTransfer for: anAccount

	transfer:= aTransfer.
	account := anAccount.! !

!testRun: #TransferTest #test01 stamp: 'NB 5/26/2023 22:48:58'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 22:48:58'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 22:48:58'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 22:48:58'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 22:48:58'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/26/2023 22:49:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/26/2023 22:49:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/26/2023 22:49:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/26/2023 22:49:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/26/2023 22:49:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/26/2023 22:49:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/26/2023 22:49:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/26/2023 22:49:03'!
PASSED!
!TransferTest methodsFor: 'test' stamp: 'NB 5/26/2023 22:53:46'!
test06
	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	self should: [Transfer registrer: -100 from: account1 to: account2. ]
		raise: Error
		withMessageText: Transfer cannotTransferAmountLessThanAPositiveNumber.! !

!testRun: #TransferTest #test06 stamp: 'NB 5/26/2023 22:53:48'!
ERROR!
!Transfer class methodsFor: 'error description' stamp: 'NB 5/26/2023 22:54:03'!
cannotTransferAmountLessThanAPositiveNumber
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'error description' stamp: 'NB 5/26/2023 22:54:28' prior: 50623899!
cannotTransferAmountLessThanAPositiveNumber
	
	^'Cannot transfer an amount that it lower or equal to 0'.! !

!testRun: #TransferTest #test06 stamp: 'NB 5/26/2023 22:54:29'!
FAILURE!
!Transfer class methodsFor: 'transfer' stamp: 'NB 5/26/2023 22:56:05' prior: 50623193!
registrer: anAmountToTransfer from: accountToWithdraw to: accountToDeposit 

	^self new initializeFor: anAmountToTransfer from: accountToWithdraw to: accountToDeposit.
	! !
!Transfer class methodsFor: 'transfer' stamp: 'NB 5/26/2023 22:57:38' prior: 50623914!
registrer: anAmountToTransfer from: accountToWithdraw to: accountToDeposit 
	anAmountToTransfer strictlyPositive ifFalse: [self error: self cannotTransferAmountLessThanAPositiveNumber ].
	
	^self new initializeFor: anAmountToTransfer from: accountToWithdraw to: accountToDeposit.
	! !

!testRun: #TransferTest #test01 stamp: 'NB 5/26/2023 22:57:40'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 22:57:40'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 22:57:40'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 22:57:40'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 22:57:40'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'NB 5/26/2023 22:57:40'!
PASSED!
!Transfer class methodsFor: 'transfer' stamp: 'NB 5/26/2023 22:58:11'!
assertAmountIsStrictlyPositive: anAmountToTransfer

	^ anAmountToTransfer strictlyPositive ifFalse: [self error: self cannotTransferAmountLessThanAPositiveNumber ]! !
!Transfer class methodsFor: 'transfer' stamp: 'NB 5/26/2023 22:58:11' prior: 50623923!
registrer: anAmountToTransfer from: accountToWithdraw to: accountToDeposit 
	self assertAmountIsStrictlyPositive: anAmountToTransfer.
	
	^self new initializeFor: anAmountToTransfer from: accountToWithdraw to: accountToDeposit.
	! !

----SNAPSHOT----(26 May 2023 23:00:03) CuisUniversity-5819.image priorSource: 9341636!

----SNAPSHOT----(26 May 2023 23:00:45) CuisUniversity-5819.image priorSource: 9354088!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:12:50'!
test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered
	| account1 account2|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer registrer: 100 from: account1 to: account2.
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.! !

!methodRemoval: TransferTest #test01 stamp: 'NB 5/26/2023 23:13:04'!
test01
	| account1 account2|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	Transfer registrer: 100 from: account1 to: account2.
	self assert: 100 equals: account2 balance.
	self assert: -100 equals: account1 balance.!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:13:07'!
PASSED!

!testRun: #TransferTest #test02 stamp: 'NB 5/26/2023 23:13:07'!
PASSED!

!testRun: #TransferTest #test03 stamp: 'NB 5/26/2023 23:13:07'!
PASSED!

!testRun: #TransferTest #test04 stamp: 'NB 5/26/2023 23:13:07'!
PASSED!

!testRun: #TransferTest #test05 stamp: 'NB 5/26/2023 23:13:07'!
PASSED!

!testRun: #TransferTest #test06 stamp: 'NB 5/26/2023 23:13:08'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:16:07'!
test02ReceiverAccountCorrectlyRegistersATransferSending
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: (account1 hasRegistered: aTransfer sender).! !

!methodRemoval: TransferTest #test02 stamp: 'NB 5/26/2023 23:16:07'!
test02
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: (account1 hasRegistered: aTransfer sender).!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:16:52'!
test03ReceptionAccountCorrectlyRegistersATransferReception
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: (account2 hasRegistered: aTransfer receiver).! !

!methodRemoval: TransferTest #test03 stamp: 'NB 5/26/2023 23:16:52'!
test03
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: (account2 hasRegistered: aTransfer receiver).!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:18:10'!
test04TransferSendingCanReachTheTransfer
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: aTransfer equals: aTransfer sender transfer.! !

!methodRemoval: TransferTest #test04 stamp: 'NB 5/26/2023 23:18:10'!
test04
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: aTransfer equals: aTransfer sender transfer.!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:18:34'!
test05TransferReceptionCanReachTheTransfer
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: aTransfer equals: aTransfer receiver transfer.! !

!methodRemoval: TransferTest #test05 stamp: 'NB 5/26/2023 23:18:34'!
test05
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: aTransfer equals: aTransfer receiver transfer.!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:19:08'!
test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber
	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	self should: [Transfer registrer: -100 from: account1 to: account2. ]
		raise: Error
		withMessageText: Transfer cannotTransferAmountLessThanAPositiveNumber.! !

!methodRemoval: TransferTest #test06 stamp: 'NB 5/26/2023 23:19:08'!
test06
	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	self should: [Transfer registrer: -100 from: account1 to: account2. ]
		raise: Error
		withMessageText: Transfer cannotTransferAmountLessThanAPositiveNumber.!

----SNAPSHOT----(26 May 2023 23:19:18) CuisUniversity-5819.image priorSource: 9354176!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:19:21'!
PASSED!

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:19:21'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:19:21'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:19:21'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:19:21'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:19:21'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:21:01' prior: 50624094!
test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber
	| account1 account2 |
	
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	self should: [Transfer registrer: -100 from: ReceptiveAccount new to: ReceptiveAccount new. ]
		raise: Error
		withMessageText: Transfer cannotTransferAmountLessThanAPositiveNumber.! !

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:21:05'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:21:05'!
PASSED!

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:21:05'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:21:05'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:21:05'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:21:05'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:21:05'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:21:10' prior: 50624144!
test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber
	
	self should: [Transfer registrer: -100 from: ReceptiveAccount new to: ReceptiveAccount new. ]
		raise: Error
		withMessageText: Transfer cannotTransferAmountLessThanAPositiveNumber.! !

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:21:11'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:21:11'!
PASSED!

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:21:11'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:21:11'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:21:11'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:21:11'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:21:11'!
PASSED!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 23:25:47'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'transferSenderAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 23:25:50'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'transferSenderAccount transferReceiverAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 23:25:51'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'transferSenderAccount transferReceiverAccount initialBalanceForAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 23:25:52'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'transferSenderAccount transferReceiverAccount initialBalanceForAccounts amountTransfered'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferTest category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 23:25:54'!
TestCase subclass: #TransferTest
	instanceVariableNames: 'transferSenderAccount transferReceiverAccount initialBalanceForAccounts amountTransfered transfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferTest methodsFor: 'setUp' stamp: 'NB 5/26/2023 23:25:46' overrides: 16961394!
setUp

	transferSenderAccount:= ReceptiveAccount new.
	transferReceiverAccount:= ReceptiveAccount new.
	initialBalanceForAccounts:= 0.
	amountTransfered:= 100.
	transfer:= Transfer registrer: amountTransfered from: transferSenderAccount to: transferReceiverAccount.! !
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:26:59' prior: 50623971!
test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered
	
	self assert: initialBalanceForAccounts + amountTransfered equals: transferReceiverAccount balance.
	self assert: initialBalanceForAccounts - amountTransfered equals: transferSenderAccount balance.! !

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:27:00'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:27:00'!
PASSED!

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:27:00'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:27:00'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:27:00'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:27:00'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:27:00'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:27:40' prior: 50624010!
test02ReceiverAccountCorrectlyRegistersATransferSending
	
	self assert: (transferReceiverAccount hasRegistered: transfer sender).! !

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:27:41'!
FAILURE!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:28:17' prior: 50624322!
test02ReceiverAccountCorrectlyRegistersATransferSending
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: (transferReceiverAccount hasRegistered: transfer sender).! !

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:28:19'!
FAILURE!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:28:22'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:28:25'!
PASSED!

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:28:27'!
FAILURE!

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:28:27'!
FAILURE!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:30:35' prior: 50624333!
test02ReceiverAccountCorrectlyRegistersATransferSending
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: (transferSenderAccount hasRegistered: transfer sender).! !
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:30:40' prior: 50624366!
test02ReceiverAccountCorrectlyRegistersATransferSending

	self assert: (transferSenderAccount hasRegistered: transfer sender).! !

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:30:41'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:30:41'!
PASSED!

!testRun: #TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:30:41'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:30:41'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:30:41'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:30:41'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:30:41'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:30:55'!
test02SenderAccountCorrectlyRegistersATransferSending

	self assert: (transferSenderAccount hasRegistered: transfer sender).! !

!methodRemoval: TransferTest #test02ReceiverAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:30:55'!
test02ReceiverAccountCorrectlyRegistersATransferSending

	self assert: (transferSenderAccount hasRegistered: transfer sender).!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:31:15' prior: 50624031!
test03ReceptionAccountCorrectlyRegistersATransferReception
	
	self assert: (transferReceiverAccount hasRegistered: transfer receiver).! !

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:31:16'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:31:16'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:31:16'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:31:16'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:31:16'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:31:16'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:31:16'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:31:38' prior: 50624052!
test04TransferSendingCanReachTheTransfer
	| account1 account2 aTransfer|
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	
	aTransfer := Transfer registrer: 100 from: account1 to: account2.
	self assert: transfer equals: transfer sender transfer.! !

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:31:41'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:31:41'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:31:41'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:31:41'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:31:41'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:31:41'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:31:41'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:31:45' prior: 50624462!
test04TransferSendingCanReachTheTransfer
	
	self assert: transfer equals: transfer sender transfer.! !

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:31:46'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:31:46'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:31:46'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:31:46'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:31:46'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:31:46'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:31:46'!
PASSED!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:32:03' prior: 50624073!
test05TransferReceptionCanReachTheTransfer
	
	self assert: transfer equals: transfer receiver transfer.! !

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:32:04'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:32:04'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:32:04'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:32:04'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:32:04'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:32:04'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:32:04'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/26/2023 23:32:26'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/26/2023 23:32:26'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/26/2023 23:32:26'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/26/2023 23:32:26'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/26/2023 23:32:26'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/26/2023 23:32:26'!
PASSED!

----SNAPSHOT----(26 May 2023 23:32:29) CuisUniversity-5819.image priorSource: 9358927!

TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #ReportTest category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 23:36:19'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 23:43:28'!
Object subclass: #AccountSummaryReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:43:22'!
test01
	
	self assert: (OrderedCollection with: 'Balance = 0') equals: (AccountSummaryReport for: ReceptiveAccount new) generate.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/26/2023 23:43:33'!
ERROR!
!AccountSummaryReport class methodsFor: 'instance creation' stamp: 'NB 5/26/2023 23:43:40'!
for: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aReceptiveAccount ! !
!AccountSummaryReport class methodsFor: 'instance creation' stamp: 'NB 5/26/2023 23:43:48' prior: 50624621!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount ! !

!testRun: #ReportTest #test01 stamp: 'NB 5/26/2023 23:43:49'!
ERROR!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/26/2023 23:44:02'!
Object subclass: #AccountSummaryReport
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryReport methodsFor: 'initialization' stamp: 'NB 5/26/2023 23:44:02'!
initializeFor: aReceptiveAccount 
	self shouldBeImplemented.
	receptiveAccount := aReceptiveAccount.! !
!AccountSummaryReport methodsFor: 'initialization' stamp: 'NB 5/26/2023 23:44:08' prior: 50624646!
initializeFor: aReceptiveAccount 
	
	receptiveAccount := aReceptiveAccount.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/26/2023 23:44:09'!
ERROR!

!testRun: #ReportTest #test01 stamp: 'NB 5/26/2023 23:44:09'!
ERROR!
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/26/2023 23:44:22'!
generate
	self shouldBeImplemented.! !
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/26/2023 23:44:43' prior: 50624663!
generate
	
	^OrderedCollection with: 'Balance = 0'.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/26/2023 23:44:45'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/26/2023 23:44:48'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/26/2023 23:44:48'!
PASSED!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:52:28'!
test02

	| account1 account2|
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	self assert: (
		OrderedCollection
			with: 'Depósito por 100.'
			with: 'Extracción por 50.'
			with: 'Salida por transferencia de 20.'
			with: 'Entrada por transferencia de 30.'
			with: 'Balance = 60'
		)
	
	equals: (AccountSummaryReport for: account1) generate.! !

!testRun: #ReportTest #test02 stamp: 'NB 5/26/2023 23:52:31'!
FAILURE!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/26/2023 23:53:53' prior: 50624679!
test02

	| account1 account2|
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	self assert: (
		OrderedCollection
			with: 'Depósito por 100.'
			with: 'Extracción por 50.'
			with: 'Salida por transferencia de 20.'
			with: 'Entrada por transferencia de 30.'
			with: 'Balance = 60'
		)
	equals: (AccountSummaryReport for: account1) generate.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/26/2023 23:53:55'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/26/2023 23:53:56'!
FAILURE!

!testRun: #ReportTest #test02 stamp: 'NB 5/26/2023 23:53:56'!
FAILURE!
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/26/2023 23:58:08' prior: 50624668!
generate
	
	^receptiveAccount summaryReport.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/26/2023 23:59:45'!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].
	^reportLines.! !
!Transaction methodsFor: 'reports' stamp: 'NB 5/27/2023 00:00:18'!
addReportLineTo: aSequenceOfReportLines

	self subclassResponsibility .! !
!Deposit methodsFor: 'balance' stamp: 'NB 5/27/2023 00:01:12' overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Depósito por ', self value.! !
!Withdraw methodsFor: 'reports' stamp: 'NB 5/27/2023 00:01:30' overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Extracción por ', self value.! !
!TransferReception methodsFor: 'reports' stamp: 'NB 5/27/2023 00:01:57' overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Entrada por transferencia de ', self value.! !
!TransferSending methodsFor: 'reports' stamp: 'NB 5/27/2023 00:02:23' overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Salida por transferencia de ', self value.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/27/2023 00:02:55' prior: 50624733!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].
	reportLines add: 'Balance = ',self balance.
	^reportLines.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/27/2023 00:02:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/27/2023 00:02:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/27/2023 00:02:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/27/2023 00:02:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/27/2023 00:02:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/27/2023 00:02:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/27/2023 00:02:57'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:03:03'!
ERROR!

!testRun: #ReportTest #test02 stamp: 'NB 5/27/2023 00:03:03'!
ERROR!

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:03:06'!
ERROR!
!Deposit methodsFor: 'balance' stamp: 'NB 5/27/2023 00:03:51' prior: 50624746 overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Depósito por ', self value asString .! !
!Withdraw methodsFor: 'reports' stamp: 'NB 5/27/2023 00:04:01' prior: 50624752 overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Extracción por ', self value asString.! !
!TransferReception methodsFor: 'reports' stamp: 'NB 5/27/2023 00:04:07' prior: 50624759 overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Entrada por transferencia de ', self value asString.! !
!TransferSending methodsFor: 'reports' stamp: 'NB 5/27/2023 00:04:14' prior: 50624766 overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Salida por transferencia de ', self value asString.! !

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/27/2023 00:04:29'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/27/2023 00:04:29'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/27/2023 00:04:29'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/27/2023 00:04:29'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/27/2023 00:04:29'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/27/2023 00:04:29'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:04:32'!
ERROR!

!testRun: #ReportTest #test02 stamp: 'NB 5/27/2023 00:04:32'!
ERROR!

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:04:34'!
ERROR!

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:04:40'!
ERROR!
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/27/2023 00:05:05' prior: 50624773!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/27/2023 00:05:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/27/2023 00:05:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/27/2023 00:05:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/27/2023 00:05:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/27/2023 00:05:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/27/2023 00:05:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/27/2023 00:05:06'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:05:09'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/27/2023 00:05:09'!
FAILURE!

!testRun: #ReportTest #test02 stamp: 'NB 5/27/2023 00:05:09'!
FAILURE!

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:05:15'!
PASSED!
!Deposit methodsFor: 'balance' stamp: 'NB 5/27/2023 00:07:48' prior: 50624816 overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Depósito por ', self value asString ,'.'.! !
!Withdraw methodsFor: 'reports' stamp: 'NB 5/27/2023 00:07:54' prior: 50624823 overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Extracción por ', self value asString,'.'.! !
!TransferReception methodsFor: 'reports' stamp: 'NB 5/27/2023 00:08:00' prior: 50624830 overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Entrada por transferencia de ', self value asString,'.'.! !
!TransferSending methodsFor: 'reports' stamp: 'NB 5/27/2023 00:08:04' prior: 50624838 overrides: 50624741!
addReportLineTo: aSequenceOfReportLines

	aSequenceOfReportLines add: 'Salida por transferencia de ', self value asString,'.'.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/27/2023 00:08:10' prior: 50624877!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].
	reportLines add: 'Balance = ',self balance asString,'.'.
	^reportLines.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:08:13'!
FAILURE!

!testRun: #ReportTest #test02 stamp: 'NB 5/27/2023 00:08:13'!
FAILURE!

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:08:15'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/27/2023 00:08:36' prior: 50624953!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/27/2023 00:08:39'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/27/2023 00:08:39'!
PASSED!

----SNAPSHOT----(27 May 2023 00:08:42) CuisUniversity-5819.image priorSource: 9374037!

!testRun: #ReportTest #test02 stamp: 'NB 5/27/2023 00:23:16'!
PASSED!

----SNAPSHOT----(27 May 2023 00:25:22) CuisUniversity-5819.image priorSource: 9386665!

----STARTUP---- (28 May 2023 15:27:52) as /Users/nico/Documents/inge1/cuis-images/macos64/CuisUniversity-5819.image!

!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:34:56' prior: 50624970!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [].
		 
		
		
		
		
		].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:35:21' prior: 50624996!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [reportLines add: 'Depósito por ', self value asString ,'.'.].
		 
		
		
		
		
		].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:35:31' prior: 50625007!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [reportLines add: 'Depósito por ', self value asString ,'.'.].
		(aTransaction isKindOf: Withdraw ) ifTrue: [reportLines add: 'Depósito por ', self value asString ,'.'.].
		 
		
		
		
		
		].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:36:06' prior: 50625020!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [reportLines add: 'Depósito por ', self value asString ,'.'.].
		(aTransaction isKindOf: Withdraw ) ifTrue: [reportLines add: 'Extracción por ', self value asString,'.'].
		(aTransaction isKindOf: TransferReception ) ifTrue: [reportLines add: 'Extracción por ', self value asString,'.'].
		 
		
		
		
		
		].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:36:30' prior: 50625036!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [reportLines add: 'Depósito por ', self value asString ,'.'.].
		(aTransaction isKindOf: Withdraw ) ifTrue: [reportLines add: 'Extracción por ', self value asString,'.'].
		(aTransaction isKindOf: TransferReception ) ifTrue: [reportLines add: 'Entrada por transferencia de ', self value asString,'.'.].
		
		
		 
		
		
		
		
		].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:36:53' prior: 50625056!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [reportLines add: 'Depósito por ', self value asString ,'.'.].
		(aTransaction isKindOf: Withdraw ) ifTrue: [reportLines add: 'Extracción por ', self value asString,'.'].
		(aTransaction isKindOf: TransferReception ) ifTrue: [reportLines add: 'Entrada por transferencia de ', self value asString,'.'.].
		(aTransaction isKindOf: TransferSending ) ifTrue: [reportLines add: 'Entrada por transferencia de ', self value asString,'.'.].
		
		].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:37:09' prior: 50625076!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [reportLines add: 'Depósito por ', self value asString ,'.'.].
		(aTransaction isKindOf: Withdraw ) ifTrue: [reportLines add: 'Extracción por ', self value asString,'.'].
		(aTransaction isKindOf: TransferReception ) ifTrue: [reportLines add: 'Entrada por transferencia de ', self value asString,'.'.].
		(aTransaction isKindOf: TransferSending ) ifTrue: [reportLines add: 'Salida por transferencia de ', self value asString,'.'.].
		
		].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:37:21' prior: 50625100!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | 
		(aTransaction isKindOf: Deposit) ifTrue: [reportLines add: 'Depósito por ', aTransaction value asString ,'.'.].
		(aTransaction isKindOf: Withdraw ) ifTrue: [reportLines add: 'Extracción por ', aTransaction value asString,'.'].
		(aTransaction isKindOf: TransferReception ) ifTrue: [reportLines add: 'Entrada por transferencia de ', aTransaction value asString,'.'.].
		(aTransaction isKindOf: TransferSending ) ifTrue: [reportLines add: 'Salida por transferencia de ', aTransaction value asString,'.'.].
		
		].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/28/2023 15:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 15:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 15:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/28/2023 15:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/28/2023 15:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/28/2023 15:37:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/28/2023 15:37:47'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 15:38:04'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 15:38:04'!
PASSED!
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/27/2023 00:08:36' prior: 50625124!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 15:40:51'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 15:40:51'!
PASSED!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 15:42:13'!
test03

	| portfolio |
	
	portfolio:= Portfolio new.
	
	self assert: (
		OrderedCollection
			with: 'Balance = 0'
		)
	equals: (AccountSummaryReport for: portfolio) generate.! !

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 15:42:15'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 15:42:24'!
summaryReport
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 15:42:39' prior: 50625204!
summaryReport
	
	^OrderedCollection with: 'Balance = 0'.! !

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 15:42:40'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 15:42:40'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 15:42:40'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 15:42:40'!
PASSED!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 15:43:06'!
test04

	| portfolio |
	
	portfolio:= Portfolio new.
	
	self assert: (
		OrderedCollection
			with: 'Balance = 0'
		)
	equals: (AccountSummaryReport for: portfolio) generate.! !
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 15:43:22' prior: 50625221!
test04

	| portfolio account1 account2|
	
	portfolio:= Portfolio new.
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	self assert: (
		OrderedCollection
			with: 'Balance = 0'
		)
	equals: (AccountSummaryReport for: portfolio) generate.! !
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 15:43:39' prior: 50625230!
test04

	| portfolio account1 account2|
	
	portfolio:= Portfolio new.
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	self assert: (
		OrderedCollection
			with: 'Depósito por 100.'
			with: 'Extracción por 50.'
			with: 'Salida por transferencia de 20.'
			with: 'Entrada por transferencia de 30.'
			with: 'Balance = 60'
		)
	equals: (AccountSummaryReport for: portfolio) generate.! !
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 15:43:54' prior: 50625247!
test04

	| portfolio account1 account2|
	
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	portfolio:= Portfolio with: account1.
	
	self assert: (
		OrderedCollection
			with: 'Depósito por 100.'
			with: 'Extracción por 50.'
			with: 'Salida por transferencia de 20.'
			with: 'Entrada por transferencia de 30.'
			with: 'Balance = 60'
		)
	equals: (AccountSummaryReport for: portfolio) generate.! !

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 15:43:58'!
FAILURE!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 15:44:30'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 15:46:54'!
addReportTo: reportLines! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 15:47:49' prior: 50625208!
summaryReport
	
	|reportLines|
	reportLines := OrderedCollection new.
	accounts do: [:anAccount | anAccount addReportTo: reportLines].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 15:48:12' prior: 50625294!
addReportTo: reportLines

	accounts do: [:anAccount | anAccount addReportTo: reportLines].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:49:34'!
addReportTo: reportLines

	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 15:50:47' prior: 50625313!
addReportTo: reportLines

	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].! !

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 15:50:58'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 15:50:58'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 15:50:58'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 15:50:58'!
PASSED!

----SNAPSHOT----(28 May 2023 15:51:01) CuisUniversity-5819.image priorSource: 9386824!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 15:52:47'!
test05

	| portfolio account1 account2 portfolio2|
	
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	portfolio2 := Portfolio with: account1.
	portfolio:= Portfolio with: portfolio2 .
	
	self assert: (
		OrderedCollection
			with: 'Depósito por 100.'
			with: 'Extracción por 50.'
			with: 'Salida por transferencia de 20.'
			with: 'Entrada por transferencia de 30.'
			with: 'Balance = 60'
		)
	equals: (AccountSummaryReport for: portfolio) generate.! !

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 15:52:50'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 15:52:50'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 15:52:50'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 15:52:50'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 15:52:50'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 15:52:50'!
PASSED!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 15:55:46' prior: 50625334!
test05

	| portfolio account1 account2 portfolio2|
	
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	portfolio2 := Portfolio with: account1.
	portfolio:= Portfolio with: portfolio2 with: account2.
	
	self assert: (
		OrderedCollection
			with: 'Depósito por 100.'
			with: 'Extracción por 50.'
			with: 'Salida por transferencia de 20.'
			with: 'Entrada por transferencia de 30.'
			with: 'Balance = 60'
		)
	equals: (AccountSummaryReport for: portfolio) generate.! !

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 15:55:47'!
FAILURE!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 15:56:06'!
FAILURE!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 15:56:22'!
PASSED!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 16:00:42' prior: 50625371!
test05

	| portfolio account1 account2 portfolio2 expectedSummaryReport|
	
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	portfolio2 := Portfolio with: account1.
	portfolio:= Portfolio with: portfolio2 with: account2.
	
	expectedSummaryReport:= OrderedCollection
			with: 'Depósito por 100.'
			with: 'Extracción por 50.'
			with: 'Salida por transferencia de 20.'
			with: 'Entrada por transferencia de 30.'
			with: 'Salida por transferencia de 30.'
			with: 'Entrada por transferencia de 20.'.
	
	expectedSummaryReport 	add: 'Balance = 50'.
	
	self assert: expectedSummaryReport equals: (AccountSummaryReport for: portfolio) generate.! !

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:00:43'!
FAILURE!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 16:03:11' prior: 50625402!
test05

	| portfolio account1 account2 portfolio2 expectedSummaryReport|
	
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	portfolio2 := Portfolio with: account1.
	portfolio:= Portfolio with: portfolio2 with: account2.
	
	expectedSummaryReport:= OrderedCollection
			with: 'Depósito por 100.'
			with: 'Extracción por 50.'
			with: 'Salida por transferencia de 20.'
			with: 'Entrada por transferencia de 30.'
			with: 'Entrada por transferencia de 20.'
			with: 'Salida por transferencia de 30.'.
			
	
	expectedSummaryReport 	add: 'Balance = 50'.
	
	self assert: expectedSummaryReport equals: (AccountSummaryReport for: portfolio) generate.! !

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:03:13'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:03:13'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:03:13'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:03:13'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:03:13'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:03:13'!
PASSED!

----SNAPSHOT----(28 May 2023 16:03:20) CuisUniversity-5819.image priorSource: 9397799!

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 16:04:47'!
Object subclass: #TransferNetReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 16:04:41'!
test06
	
	self assert: 0 equals: (TransferNetReport for: ReceptiveAccount new) generate.! !

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:04:50'!
ERROR!
!TransferNetReport class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 16:04:58'!
for: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aReceptiveAccount ! !
!TransferNetReport class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 16:05:06' prior: 50625495!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount ! !

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:05:06'!
ERROR!

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 16:05:18'!
Object subclass: #TransferNetReport
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReport methodsFor: 'initialization' stamp: 'NB 5/28/2023 16:05:18'!
initializeFor: aReceptiveAccount 
	self shouldBeImplemented.
	receptiveAccount := aReceptiveAccount.! !
!TransferNetReport methodsFor: 'initialization' stamp: 'NB 5/28/2023 16:05:23' prior: 50625520!
initializeFor: aReceptiveAccount 
	
	receptiveAccount := aReceptiveAccount.! !

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:05:26'!
ERROR!
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:05:34'!
generate
	self shouldBeImplemented.! !
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:05:39' prior: 50625534!
generate
	^0.! !

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:05:40'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:05:40'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:05:40'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:05:40'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:05:40'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:05:40'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:05:40'!
PASSED!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 16:06:33'!
test07

	| account1 account2|
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	self assert: 10 equals: (AccountSummaryReport for: account1) generate.! !

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:06:35'!
FAILURE!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 16:07:01' prior: 50625557!
test07

	| account1 account2|
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	self assert: 10 equals: (TransferNetReport for: account1) generate.! !

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:07:02'!
FAILURE!
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:08:07' prior: 50625538!
generate
	
	^receptiveAccount transferNetReport.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 16:09:05'!
transferNetReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 16:11:07' prior: 50625594!
transferNetReport

	
	^transactions inject: 0 into: [:aTransferNet :aTransaction |       ].
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 16:13:18' prior: 50625604!
transferNetReport

	
	^transactions inject: 0 into: [:aTransferNet :aTransaction | 
		(aTransaction isKindOf: TransferReception ) ifTrue: [aTransferNet + aTransaction value].
		(aTransaction isKindOf: TransferSending ) ifTrue: [aTransferNet - aTransaction value].    
		aTransferNet.
		 ].
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/28/2023 16:13:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 16:13:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 16:13:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/28/2023 16:13:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/28/2023 16:13:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/28/2023 16:13:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/28/2023 16:13:22'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:13:26'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:13:26'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:13:26'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:13:26'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:13:26'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:13:26'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:13:26'!
FAILURE!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:13:26'!
FAILURE!
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 16:14:36' prior: 50625610!
transferNetReport

	
	^transactions inject: 0 into: [:aTransferNet :aTransaction | 
		(aTransaction isKindOf: TransferReception ) ifTrue: [aTransferNet + aTransaction value].
		(aTransaction isKindOf: TransferSending ) ifTrue: [aTransferNet - aTransaction value].    
		aTransferNet.
		 ].
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 16:15:27' prior: 50625667!
transferNetReport

	
	^transactions inject: 0 into: [:aTransferNet :aTransaction | 
		(aTransaction isKindOf: TransferReception ) ifTrue: [aTransferNet + aTransaction value] ifFalse:[
		(aTransaction isKindOf: TransferSending ) ifTrue: [aTransferNet - aTransaction value] ifFalse: [  
		aTransferNet.
		]
		]
		 ].
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/28/2023 16:15:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 16:15:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 16:15:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/28/2023 16:15:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/28/2023 16:15:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/28/2023 16:15:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/28/2023 16:15:28'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:15:33'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:15:33'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:15:33'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:15:33'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:15:33'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:15:33'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:15:33'!
PASSED!

----SNAPSHOT----(28 May 2023 16:15:38) CuisUniversity-5819.image priorSource: 9402430!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:15:46'!
PASSED!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 16:16:53'!
test08

	self assert: 0 equals: (TransferNetReport for: Portfolio new) generate.! !

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:16:53'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 16:17:00'!
transferNetReport
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 16:17:04' prior: 50625745!
transferNetReport
	^0.! !

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:17:06'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:17:06'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:17:06'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:17:06'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:17:06'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:17:06'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:17:06'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:17:06'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:17:06'!
PASSED!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 16:17:42'!
test09

	| portfolio account1 account2|
	
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	portfolio:= Portfolio with: account1.
	
	self assert: 10 equals: (AccountSummaryReport for: portfolio) generate.! !

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 16:17:44'!
FAILURE!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 16:17:55' prior: 50625773!
test09

	| portfolio account1 account2|
	
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	portfolio:= Portfolio with: account1.
	
	self assert: 10 equals: (TransferNetReport for: portfolio) generate.! !

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 16:17:56'!
FAILURE!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 16:20:11' prior: 50625750!
transferNetReport
	
	^ accounts sum: [:anAccount | anAccount transferNetReportToFathersReport]! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 16:20:21'!
transferNetReportToFathersReport

	
	^transactions inject: 0 into: [:aTransferNet :aTransaction | 
		(aTransaction isKindOf: TransferReception ) ifTrue: [aTransferNet + aTransaction value] ifFalse:[
		(aTransaction isKindOf: TransferSending ) ifTrue: [aTransferNet - aTransaction value] ifFalse: [  
		aTransferNet.
		]
		]
		 ].
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/28/2023 16:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 16:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 16:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/28/2023 16:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/28/2023 16:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/28/2023 16:20:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/28/2023 16:20:23'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:20:26'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:20:26'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:20:26'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:20:26'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:20:26'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:20:26'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:20:26'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:20:26'!
ERROR!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 16:20:26'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:20:26'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 16:20:47' prior: 50625809!
transferNetReport
	
	^ accounts sum: [:anAccount | anAccount transferNetReportToFathersReport] ifEmpty: 0.! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/28/2023 16:20:48'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:20:50'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:20:50'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:20:51'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:20:51'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:20:51'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:20:51'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:20:51'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:20:51'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 16:20:51'!
PASSED!
!ReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 16:23:23'!
test10

	| portfolio account1 account2 portfolio2 |
	
	
	account1:= ReceptiveAccount new.
	account2:= ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Withdraw register: 50 on: account1.
	Transfer registrer: 20 from: account1 to: account2.
	Transfer registrer: 30 from: account2 to: account1.
	
	portfolio2 := Portfolio with: account1.
	portfolio:= Portfolio with: portfolio2.
	
	self assert: 10 equals: (TransferNetReport for: portfolio) generate.! !

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 16:23:29'!
ERROR!

!methodRemoval: ReceptiveAccount #transferNetReportToFathersReport stamp: 'NB 5/28/2023 16:23:41'!
transferNetReportToFathersReport

	
	^transactions inject: 0 into: [:aTransferNet :aTransaction | 
		(aTransaction isKindOf: TransferReception ) ifTrue: [aTransferNet + aTransaction value] ifFalse:[
		(aTransaction isKindOf: TransferSending ) ifTrue: [aTransferNet - aTransaction value] ifFalse: [  
		aTransferNet.
		]
		]
		 ].
	!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 16:23:48' prior: 50625877!
transferNetReport
	
	^ accounts sum: [:anAccount | anAccount transferNetReport] ifEmpty: 0.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 16:23:52'!
PASSED!

----SNAPSHOT----(28 May 2023 16:23:55) CuisUniversity-5819.image priorSource: 9410649!
!Transaction methodsFor: 'reports' stamp: 'NB 5/28/2023 16:31:16'!
addToTransferNet: aNetAmount

	self subclassResponsibility .! !
!AccountTransaction methodsFor: 'reports' stamp: 'NB 5/28/2023 16:31:42' overrides: 50626023!
addToTransferNet: aNetAmount! !
!TransferReception methodsFor: 'reports' stamp: 'NB 5/28/2023 16:32:00' overrides: 50626023!
addToTransferNet: aNetAmount

	aNetAmount + self value.! !
!TransferSending methodsFor: 'reports' stamp: 'NB 5/28/2023 16:32:08' overrides: 50626023!
addToTransferNet: aNetAmount

	aNetAmount - self value.! !
!AccountTransaction methodsFor: 'reports' stamp: 'NB 5/28/2023 16:32:38' prior: 50626028 overrides: 50626023!
addToTransferNet: aNetAmount

	^aNetAmount .! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 16:33:10' prior: 50625679!
transferNetReport

	
	^transactions inject: 0 into: [:aTransferNet :aTransaction | aTransaction addToTransferNet: aTransferNet		 ].
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/28/2023 16:33:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 16:33:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/28/2023 16:33:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/28/2023 16:33:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/28/2023 16:33:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/28/2023 16:33:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/28/2023 16:33:12'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:33:14'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:33:14'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:33:14'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:33:14'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:33:15'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:33:15'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:33:15'!
ERROR!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:33:15'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 16:33:15'!
ERROR!

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 16:33:15'!
ERROR!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:33:17'!
ERROR!
!TransferReception methodsFor: 'reports' stamp: 'NB 5/28/2023 16:33:30' prior: 50626032 overrides: 50626023!
addToTransferNet: aNetAmount

	^aNetAmount + self value.! !
!TransferSending methodsFor: 'reports' stamp: 'NB 5/28/2023 16:33:35' prior: 50626037 overrides: 50626023!
addToTransferNet: aNetAmount

	^aNetAmount - self value.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 16:33:38'!
PASSED!

----SNAPSHOT----(28 May 2023 16:33:42) CuisUniversity-5819.image priorSource: 9419844!
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:40:44' prior: 50624729!
generate
	
	^receptiveAccount summaryReport: self.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 16:41:11'!
summaryReport: aReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | aTransaction addReportLineTo: aReport].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.! !

!methodRemoval: ReceptiveAccount #summaryReport stamp: 'NB 5/28/2023 16:41:15'!
summaryReport

	|reportLines|
	reportLines := OrderedCollection new.
	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 16:42:17'!
Object subclass: #AccountSummaryReport
	instanceVariableNames: 'receptiveAccount reportLines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:42:16' prior: 50626143!
generate

	reportLines:= OrderedCollection new.
	receptiveAccount summaryReport: self.
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.
	
	! !
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:43:40' prior: 50626175!
generate

	reportLines:= OrderedCollection new.
	receptiveAccount summaryReport: self.
	reportLines add: 'Balance = ',receptiveAccount balance asString.
	^reportLines.
	
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 16:44:10' prior: 50626147!
summaryReport: aReport
	
	transactions do: [:aTransaction | aTransaction addReportLineTo: aReport].! !
!Transaction methodsFor: 'reports' stamp: 'NB 5/28/2023 16:44:26' prior: 50624741!
addReportLineTo: aReport

	self subclassResponsibility .! !
!Deposit methodsFor: 'balance' stamp: 'NB 5/28/2023 16:44:53' prior: 50624923 overrides: 50626198!
addReportLineTo: aReport

	aReport add: 'Depósito por ', self value asString ,'.'.! !
!Deposit methodsFor: 'balance' stamp: 'NB 5/28/2023 16:45:41' prior: 50626203 overrides: 50626198!
addReportLineTo: aReport

	aReport addDeposit: self.
	! !
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:46:13'!
addDeposit: aDeposit

	reportLines add: 'Depósito por ', aDeposit value asString ,'.'.
	
	! !
!Withdraw methodsFor: 'reports' stamp: 'NB 5/28/2023 16:46:40' prior: 50624930 overrides: 50626198!
addReportLineTo: aReport

	aReport addWithdraw: self.
	

	! !
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:47:08'!
addWithdraw: aWithdraw

	reportLines add: 'Extracción por ', aWithdraw value asString,'.'.
	
	! !
!TransferReception methodsFor: 'reports' stamp: 'NB 5/28/2023 16:47:37' prior: 50624938 overrides: 50626198!
addReportLineTo: aReport

	aReport addTransferReception: self.
	
! !
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:48:11'!
addTransferReception: aTransferReception

	reportLines add: 'Entrada por transferencia de ', aTransferReception value asString,'.'.
	
	! !
!TransferSending methodsFor: 'reports' stamp: 'NB 5/28/2023 16:48:58' prior: 50624946 overrides: 50626198!
addReportLineTo: aReport

	aReport addTransferSending: self.
	! !
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:49:26'!
addTransferSending: aTransferSending

	reportLines add: 'Salida por transferencia de ', aTransferSending value asString,'.'.
	
	! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 16:56:03'!
summaryReport: aReport
	
	accounts do: [:anAccount | anAccount summaryReport: aReport].
	! !

!methodRemoval: Portfolio #summaryReport stamp: 'NB 5/28/2023 16:56:06'!
summaryReport
	
	|reportLines|
	reportLines := OrderedCollection new.
	accounts do: [:anAccount | anAccount addReportTo: reportLines].
	reportLines add: 'Balance = ',self balance asString.
	^reportLines.!
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:57:32'!
addBalanceLine

	^ reportLines add: 'Balance = ',receptiveAccount balance asString! !
!AccountSummaryReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:57:32' prior: 50626183!
generate

	reportLines:= OrderedCollection new.
	receptiveAccount summaryReport: self.
	self addBalanceLine.
	^reportLines.
	
	! !

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 16:57:38'!
PASSED!

----SNAPSHOT----(28 May 2023 16:57:42) CuisUniversity-5819.image priorSource: 9423649!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 16:57:57'!
PASSED!
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 16:59:14' prior: 50625590!
generate
	
	^receptiveAccount summaryReport: self.! !

Object subclass: #Report
	instanceVariableNames: 'receptiveAccount reportLines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:00:32'!
Object subclass: #Report
	instanceVariableNames: 'receptiveAccount reportLines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:00:48'!
Object subclass: #Report
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #AccountSummaryReport
	instanceVariableNames: 'receptiveAccount reportLines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:00:58'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: 'receptiveAccount reportLines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Report subclass: #TransferNetReport
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:01:05'!
Report subclass: #TransferNetReport
	instanceVariableNames: 'receptiveAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:01:43'!
addDeposit: aDeposit

	! !
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:02:01'!
addWithdraw: aWithdraw

	
	! !

Report subclass: #TransferNetReport
	instanceVariableNames: 'receptiveAccount transferNetAmount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:02:14'!
Report subclass: #TransferNetReport
	instanceVariableNames: 'receptiveAccount transferNetAmount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReport methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:02:26' prior: 50625527!
initializeFor: aReceptiveAccount 
	
	transferNetAmount := 0.
	receptiveAccount := aReceptiveAccount.! !
!TransferNetReport methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:02:42' prior: 50626410!
initializeFor: aReceptiveAccount 
	
	receptiveAccount := aReceptiveAccount.! !
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:02:59' prior: 50626332!
generate
	
	transferNetAmount := 0.
	receptiveAccount summaryReport: self.
	^transferNetAmount.! !
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:03:28'!
addTransferReception: aTransferReception

	transferNetAmount + aTransferReception value.
	
	! !
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:03:50'!
addTransferSending: aTransferSending

	transferNetAmount - aTransferSending value.
	
	! !

----SNAPSHOT----(28 May 2023 17:04:14) CuisUniversity-5819.image priorSource: 9429000!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 17:04:35'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 17:04:35'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 17:04:35'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 17:04:35'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 17:04:35'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 17:04:35'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 17:04:35'!
FAILURE!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 17:04:35'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 17:04:35'!
FAILURE!

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 17:04:35'!
FAILURE!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 17:04:40'!
FAILURE!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 17:04:49'!
FAILURE!

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 17:04:53'!
FAILURE!
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:05:12' prior: 50626435!
addTransferSending: aTransferSending

	transferNetAmount:= transferNetAmount - aTransferSending value.
	
	! !
!TransferNetReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:05:20' prior: 50626429!
addTransferReception: aTransferReception

	transferNetAmount:= transferNetAmount + aTransferReception value.
	
	! !

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 17:05:31'!
PASSED!

----SNAPSHOT----(28 May 2023 17:05:39) CuisUniversity-5819.image priorSource: 9433273!

----SNAPSHOT----(28 May 2023 17:06:10) CuisUniversity-5819.image priorSource: 9435449!

!methodRemoval: Portfolio #transferNetReport stamp: 'NB 5/28/2023 17:08:01'!
transferNetReport
	
	^ accounts sum: [:anAccount | anAccount transferNetReport] ifEmpty: 0.!

!methodRemoval: ReceptiveAccount #transferNetReport stamp: 'NB 5/28/2023 17:08:08'!
transferNetReport

	
	^transactions inject: 0 into: [:aTransferNet :aTransaction | aTransaction addToTransferNet: aTransferNet		 ].
	!

!methodRemoval: ReceptiveAccount #addReportTo: stamp: 'NB 5/28/2023 17:08:52'!
addReportTo: reportLines

	transactions do: [:aTransaction | aTransaction addReportLineTo: reportLines].!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 17:09:25'!
addToReport: aReport
	
	accounts do: [:anAccount | anAccount summaryReport: aReport].
	! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 17:09:25'!
addToReport: aReport
	
	transactions do: [:aTransaction | aTransaction addReportLineTo: aReport].! !
!AccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/28/2023 17:09:25' prior: 50626278!
generate

	reportLines:= OrderedCollection new.
	receptiveAccount addToReport: self.
	self addBalanceLine.
	^reportLines.
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NB 5/28/2023 17:09:25' prior: 50626258!
summaryReport: aReport
	
	accounts do: [:anAccount | anAccount addToReport: aReport].
	! !
!TransferNetReport methodsFor: 'as yet unclassified' stamp: 'NB 5/28/2023 17:09:25' prior: 50626423!
generate
	
	transferNetAmount := 0.
	receptiveAccount addToReport: self.
	^transferNetAmount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NB 5/28/2023 17:09:25' prior: 50626532!
addToReport: aReport
	
	accounts do: [:anAccount | anAccount addToReport: aReport].
	! !

!methodRemoval: Portfolio #summaryReport: stamp: 'NB 5/28/2023 17:09:25'!
summaryReport: aReport
	
	accounts do: [:anAccount | anAccount addToReport: aReport].
	!

!methodRemoval: ReceptiveAccount #summaryReport: stamp: 'NB 5/28/2023 17:09:25'!
summaryReport: aReport
	
	transactions do: [:aTransaction | aTransaction addReportLineTo: aReport].!

!methodRemoval: AccountTransaction #addToTransferNet: stamp: 'NB 5/28/2023 17:10:16'!
addToTransferNet: aNetAmount

	^aNetAmount .!

!methodRemoval: Transaction #addToTransferNet: stamp: 'NB 5/28/2023 17:10:26'!
addToTransferNet: aNetAmount

	self subclassResponsibility .!

!methodRemoval: TransferReception #addToTransferNet: stamp: 'NB 5/28/2023 17:10:43'!
addToTransferNet: aNetAmount

	^aNetAmount + self value.!

!methodRemoval: TransferSending #addToTransferNet: stamp: 'NB 5/28/2023 17:10:50'!
addToTransferNet: aNetAmount

	^aNetAmount - self value.!

!testRun: #ReportTest #test01 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/28/2023 17:11:00'!
PASSED!

----SNAPSHOT----(28 May 2023 17:11:04) CuisUniversity-5819.image priorSource: 9435537!

----SNAPSHOT----(28 May 2023 17:11:35) CuisUniversity-5819.image priorSource: 9439018!

TestCase subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReportTest category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:15:56'!
TestCase subclass: #PortfolioReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----SNAPSHOT----(28 May 2023 17:16:05) CuisUniversity-5819.image priorSource: 9439106!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:18:00'!
Object subclass: #PortfolioReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 17:17:55'!
test01

	self assert: (OrderedCollection with:'Portfolio de la familia') equals: PortfolioReport generate.! !
!PortfolioReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 17:19:07' prior: 50626648!
test01

	self assert: (OrderedCollection with:'Portfolio de la familia')
		 equals: (PortfolioReport for: (Portfolio named: 'Portfolio de la familia') generate).! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:19:08'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:19:16'!
named: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:19:26' prior: 50626666!
named: aString 
	
	^self new initializeNamed: aString ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:19:38' prior: 50626674!
named: aName 
	
	^self new initializeNamed: aName ! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:19:39'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:19:50'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:19:50'!
initializeNamed: aName 
	self shouldBeImplemented.
	name := aName.! !
!Portfolio methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:19:56' prior: 50626694!
initializeNamed: aName 
	
	name := aName.! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:19:57'!
ERROR!
!PortfolioReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 17:20:16' prior: 50626655!
test01

	self assert: (OrderedCollection with:'Portfolio de la familia')
		 equals: (PortfolioReport for: (Portfolio named: 'Portfolio de la familia')) generate.! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:20:20'!
ERROR!
!PortfolioReport class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:20:28'!
for: aPortfolio 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aPortfolio ! !
!PortfolioReport class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:20:35' prior: 50626717!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio ! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:20:36'!
ERROR!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:20:47'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReport methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:20:47'!
initializeFor: aPortfolio 
	self shouldBeImplemented.
	portfolio := aPortfolio.! !
!PortfolioReport methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:20:52' prior: 50626741!
initializeFor: aPortfolio 
	
	portfolio := aPortfolio.! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:20:53'!
ERROR!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:21:04'!
generate
	self shouldBeImplemented.! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:21:39' prior: 50626754!
generate
	^OrderedCollection with: portfolio name.! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:21:40'!
FAILURE!
!Portfolio methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:22:19' prior: 50626699!
initializeNamed: aName 
	
	self initialize .
	name := aName.! !
!Portfolio methodsFor: 'accessing' stamp: 'NB 5/28/2023 17:22:46' overrides: 16903442!
name

	^name! !

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/28/2023 17:22:47'!
PASSED!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:22:52'!
PASSED!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:22:55'!
PASSED!
!PortfolioReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 17:25:00'!
test02


	|myAccount familyPortfolio|
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount.

	self assert: (OrderedCollection with:'Portfolio de la familia' with: ' Cuenta mia')
		 equals: (PortfolioReport for: (Portfolio named: 'Portfolio de la familia')) generate.! !
!PortfolioReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 17:25:18' prior: 50626835!
test02


	|myAccount familyPortfolio|
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount.

	self assert: (OrderedCollection with:'Portfolio de la familia' with: ' Cuenta mia')
		 equals: (PortfolioReport for: familyPortfolio) generate.! !

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:25:24'!
ERROR!
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:25:33'!
named: aString 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:25:39' prior: 50626865!
named: aString 
	
	^self new initializeNamed: aString ! !
!ReceptiveAccount class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:25:48' prior: 50626873!
named: aName 
	
	^self new initializeNamed: aName ! !

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:25:51'!
ERROR!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:25:57'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:25:57'!
initializeNamed: aName 
	self shouldBeImplemented.
	name := aName.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:26:05' prior: 50626894!
initializeNamed: aName 

	self initialize .
	name := aName.! !

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:26:06'!
ERROR!
!Portfolio class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:26:12'!
named: aString with: aReceptiveAccount 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeNamed: aString with: aReceptiveAccount ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:26:21' prior: 50626907!
named: aString with: aReceptiveAccount 
	
	^self new initializeNamed: aString with: aReceptiveAccount ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:26:28' prior: 50626917!
named: aName with: aReceptiveAccount 
	
	^self new initializeNamed: aName with: aReceptiveAccount ! !
!Portfolio class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:26:38' prior: 50626924!
named: aName with: anAccount 
	
	^self new initializeNamed: aName with: anAccount ! !

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:26:40'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:26:47'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Portfolio methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:26:47'!
initializeNamed: aName with: anAccount 
	self shouldBeImplemented.
	name := aName.
	account := anAccount.! !
!Portfolio methodsFor: 'initialization' stamp: 'NB 5/28/2023 17:27:37' prior: 50626947!
initializeNamed: aName with: anAccount 
	
	self initializeNamed: aName.
	accounts add: anAccount.! !

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:27:38'!
FAILURE!
!Portfolio class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:28:52' prior: 50626931!
named: aName with: anAccount 
	
	^(self new initializeNamed: aName) add: anAccount;yourself! !

!methodRemoval: Portfolio #initializeNamed:with: stamp: 'NB 5/28/2023 17:29:22'!
initializeNamed: aName with: anAccount 
	
	self initializeNamed: aName.
	accounts add: anAccount.!

!classDefinition: #Portfolio category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:29:46'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents name'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----SNAPSHOT----(28 May 2023 17:29:49) CuisUniversity-5819.image priorSource: 9439590!

----SNAPSHOT----(28 May 2023 17:29:54) CuisUniversity-5819.image priorSource: 9450604!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:33:32' prior: 50626758!
generate
! !

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'NB 5/28/2023 17:33:58'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio reportLines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:33:57' prior: 50626988!
generate

	reportLines:= OrderedCollection new.
	portfolio addToReport: self.
	^reportLines.! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:36:43' prior: 50627000!
generate

	reportLines:= OrderedCollection new.
	portfolio addToPortfolioReport: self.
	^reportLines.! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 17:37:48'!
addToPortfolioReport: aReport

	accounts do: [:anAccount | anAccount addToThePortfolioReport: aReport].! !

!methodRemoval: Portfolio #addReportTo: stamp: 'NB 5/28/2023 17:39:19'!
addReportTo: reportLines

	accounts do: [:anAccount | anAccount addReportTo: reportLines].!

----SNAPSHOT----(28 May 2023 17:39:23) CuisUniversity-5819.image priorSource: 9450692!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 17:40:36' prior: 50627012!
addToPortfolioReport: aReport

	aReport addPortolio: self.
	accounts do: [:anAccount | anAccount addToThePortfolioReport: aReport].! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:41:10'!
addPortolio: aPortfolio

	reportLines add: aPortfolio name.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 17:41:59'!
addToThePortfolioReport: aReport
	
	aReport addReceptiveAccount: self.! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:42:23'!
addReceptiveAccount: aReceptiveAccount

	reportLines add: ' ', aReceptiveAccount name.! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:42:26'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:42:26'!
FAILURE!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:42:26'!
FAILURE!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:42:34'!
PASSED!
!PortfolioReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 17:42:41' prior: 50626849!
test02


	|myAccount familyPortfolio|
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount.

	self assert: (OrderedCollection with:'Portfolio de la familia' with: ' Cuenta mia')
		 equals: (PortfolioReport for: familyPortfolio) generate.! !
!ReceptiveAccount methodsFor: 'accessing' stamp: 'NB 5/28/2023 17:43:02' overrides: 16903442!
name

	^name! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:43:06'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:43:06'!
PASSED!

----SNAPSHOT----(28 May 2023 17:43:09) CuisUniversity-5819.image priorSource: 9451919!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 17:45:55' prior: 50627026!
addToPortfolioReport: aReport

	aReport addPortolio: self.
	accounts do: [:anAccount | anAccount addToThePortfolioReport: aReport ].! !
!PortfolioReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 17:47:33'!
test03


	|myAccount familyPortfolio johnsAccount angiesAccount childrenPortfolio|
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.

	self assert: (OrderedCollection with:'Portfolio de la familia' with: ' Cuenta mia')
		 equals: (PortfolioReport for: familyPortfolio) generate.! !
!Portfolio class methodsFor: 'instance creation' stamp: 'NB 5/28/2023 17:48:09'!
named: aName with: anAccount with: anotherAccount 
	
	^(self new initializeNamed: aName) add: anAccount; add: anotherAccount ;yourself! !
!PortfolioReportTest methodsFor: 'tests' stamp: 'NB 5/28/2023 17:49:20' prior: 50627090!
test03


	|myAccount familyPortfolio johnsAccount angiesAccount childrenPortfolio|
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.

	self assert: (OrderedCollection 
				with:'Portfolio de la familia' 
				with: ' Cuenta mia'
				with: ' Portfolio de hijos'
				with: '  Cuenta de Juan'
				with: '  Cuenta de Angeles'
		)
		 equals: (PortfolioReport for: familyPortfolio) generate.! !

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/28/2023 17:49:22'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 17:50:39'!
addToPortfolioReport: aReport with: aSeparator

	aReport addPortolio: self.
	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport with: aSeparator, ' ' ].! !

!methodRemoval: Portfolio #addToPortfolioReport: stamp: 'NB 5/28/2023 17:50:44'!
addToPortfolioReport: aReport

	aReport addPortolio: self.
	accounts do: [:anAccount | anAccount addToThePortfolioReport: aReport ].!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:50:58' prior: 50627006!
generate

	reportLines:= OrderedCollection new.
	portfolio addToPortfolioReport: self with: ''.
	^reportLines.! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 17:51:37'!
addToPortfolioReport: aReport with: aSeparator
	
	aReport addReceptiveAccount: self with: aSeparator.! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/28/2023 17:51:48' prior: 50627147!
addToPortfolioReport: aReport with: aSeparator

	aReport addPortolio: self with: aSeparator.
	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport with: aSeparator, ' ' ].! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:52:11'!
addPortolio: aPortfolio with: aSeparator

	reportLines add: aSeparator, aPortfolio name.! !

!methodRemoval: PortfolioReport #addPortolio: stamp: 'NB 5/28/2023 17:52:15'!
addPortolio: aPortfolio

	reportLines add: aPortfolio name.!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:52:30'!
addReceptiveAccount: aReceptiveAccount with: aSeparator

	reportLines add: aSeparator, aReceptiveAccount name.! !

!methodRemoval: PortfolioReport #addReceptiveAccount: stamp: 'NB 5/28/2023 17:52:34'!
addReceptiveAccount: aReceptiveAccount

	reportLines add: ' ', aReceptiveAccount name.!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:52:50'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:52:50'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/28/2023 17:52:50'!
PASSED!

----SNAPSHOT----(28 May 2023 17:52:53) CuisUniversity-5819.image priorSource: 9453743!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:53:20'!
addAccount: aPortfolio with: aSeparator

	reportLines add: aSeparator, aPortfolio name.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NB 5/28/2023 17:53:20' prior: 50627174!
addToPortfolioReport: aReport with: aSeparator

	aReport addAccount: self with: aSeparator.
	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport with: aSeparator, ' ' ].! !

!methodRemoval: PortfolioReport #addPortolio:with: stamp: 'NB 5/28/2023 17:53:20'!
addPortolio: aPortfolio with: aSeparator

	reportLines add: aSeparator, aPortfolio name.!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/28/2023 17:53:41' prior: 50627215!
addAccount: anAccount with: aSeparator

	reportLines add: aSeparator, anAccount name.! !

!methodRemoval: PortfolioReport #addReceptiveAccount:with: stamp: 'NB 5/28/2023 17:53:46'!
addReceptiveAccount: aReceptiveAccount with: aSeparator

	reportLines add: aSeparator, aReceptiveAccount name.!

!methodRemoval: ReceptiveAccount #addToThePortfolioReport: stamp: 'NB 5/28/2023 17:54:04'!
addToThePortfolioReport: aReport
	
	aReport addReceptiveAccount: self.!
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/28/2023 17:54:14' prior: 50627168!
addToPortfolioReport: aReport with: aSeparator
	
	aReport addAccount: self with: aSeparator.! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/28/2023 17:54:19'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/28/2023 17:54:19'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/28/2023 17:54:19'!
PASSED!

----SNAPSHOT----(28 May 2023 17:54:21) CuisUniversity-5819.image priorSource: 9457968!

----SNAPSHOT----(28 May 2023 17:55:34) CuisUniversity-5819.image priorSource: 9459727!

----SNAPSHOT----(28 May 2023 17:57:46) CuisUniversity-5819.image priorSource: 9459815!

----SNAPSHOT----(28 May 2023 17:57:49) CuisUniversity-5819.image priorSource: 9459903!

----SNAPSHOT----(28 May 2023 17:58:33) CuisUniversity-5819.image priorSource: 9459991!

----SNAPSHOT----(28 May 2023 17:59:01) CuisUniversity-5819.image priorSource: 9460079!

----STARTUP---- (30 May 2023 23:21:51) as /Users/nico/Documents/inge1/cuis-images/macos64/CuisUniversity-5819.image!

!Portfolio methodsFor: 'reports' stamp: 'NB 5/30/2023 23:32:13' prior: 50627221!
addToPortfolioReport: aReport with: aSeparator

	aReport addAccount: self.
	aReport xxx.
	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ].! !
!ReceptiveAccount methodsFor: 'reports' stamp: 'NB 5/30/2023 23:32:26'!
addToPortfolioReport: aReport
	
	aReport addAccount: self! !

!methodRemoval: ReceptiveAccount #addToPortfolioReport:with: stamp: 'NB 5/30/2023 23:32:30'!
addToPortfolioReport: aReport with: aSeparator
	
	aReport addAccount: self with: aSeparator.!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'NB 5/30/2023 23:33:23'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio reportLines aSeparator1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:33:21'!
xxx

	aSeparator1:= aSeparator1 , ' '.! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:33:41'!
addAccount: anAccount

	reportLines add: aSeparator1, anAccount name.! !

!methodRemoval: PortfolioReport #addAccount:with: stamp: 'NB 5/30/2023 23:33:44'!
addAccount: anAccount with: aSeparator

	reportLines add: aSeparator, anAccount name.!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:34:48' prior: 50627162!
generate

	reportLines:= OrderedCollection new.
	aSeparator1:= ''.
	portfolio addToPortfolioReport: self with: ''.
	^reportLines.! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/30/2023 23:35:05' prior: 50627288!
addToPortfolioReport: aReport with: aSeparator

	aReport addAccount: self.
	aReport xxx.
	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ].
	aReport yyy. ! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:35:56'!
yyy

	aSeparator1 removeLast.! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:41:20' prior: 50627345!
yyy

	aSeparator1 := aSeparator1 truncateTo: aSeparator1 size - 1.! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/30/2023 23:41:39'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/30/2023 23:41:39'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/30/2023 23:41:39'!
ERROR!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/30/2023 23:41:39'!
ERROR!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/30/2023 23:41:52'!
addToPortfolioReport: aReport

	aReport addAccount: self.
	aReport xxx.
	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ].
	aReport yyy. ! !

!methodRemoval: Portfolio #addToPortfolioReport:with: stamp: 'NB 5/30/2023 23:41:56'!
addToPortfolioReport: aReport with: aSeparator

	aReport addAccount: self.
	aReport xxx.
	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ].
	aReport yyy. !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/30/2023 23:41:59'!
ERROR!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/30/2023 23:41:59'!
ERROR!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/30/2023 23:41:59'!
ERROR!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/30/2023 23:42:01'!
ERROR!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:43:06' prior: 50627330!
generate

	reportLines:= OrderedCollection new.
	aSeparator1:= ''.
	portfolio addToPortfolioReport: self.
	^reportLines.! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/30/2023 23:43:09'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/30/2023 23:43:09'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/30/2023 23:43:09'!
PASSED!

----SNAPSHOT----(30 May 2023 23:43:12) CuisUniversity-5819.image priorSource: 9460167!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:46:08'!
incrementSeparator

	aSeparator1:= aSeparator1 , ' '.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NB 5/30/2023 23:46:08' prior: 50627364!
addToPortfolioReport: aReport

	aReport addAccount: self.
	aReport incrementSeparator.
	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ].
	aReport yyy. ! !

!methodRemoval: PortfolioReport #xxx stamp: 'NB 5/30/2023 23:46:08'!
xxx

	aSeparator1:= aSeparator1 , ' '.!
!Portfolio methodsFor: 'reports' stamp: 'NB 5/30/2023 23:50:15' prior: 50627412!
addToPortfolioReport: aReport

	aReport addPortfolio: self.
	aReport addAccount: self.
	aReport incrementSeparator.
	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ].
	aReport yyy. ! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:50:36'!
addPortfolio: aPortfolio

	

! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:51:03' prior: 50627433!
addPortfolio: aPortfolio

	
	self incrementSeparator.

! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:51:15' prior: 50627437!
addPortfolio: aPortfolio

	reportLines add: aSeparator1, aPortfolio name.
	self incrementSeparator.

! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:52:13' prior: 50627442!
addPortfolio: aPortfolio

	reportLines add: aSeparator1, aPortfolio name.
	self incrementSeparator.
	aPortfolio addAccountsToReport: self.
! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/30/2023 23:52:37'!
addAccountsToReport: aReport

	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ]! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:52:54' prior: 50627448!
addPortfolio: aPortfolio

	reportLines add: aSeparator1, aPortfolio name.
	self incrementSeparator.
	aPortfolio addAccountsToReport: self.
	self yyy.
! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/30/2023 23:53:32' prior: 50627424!
addToPortfolioReport: aReport

	aReport addPortfolio: self.! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/30/2023 23:54:57' prior: 50627469!
addToPortfolioReport: aReport

	aReport addPortfolio: self.! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/30/2023 23:55:05' prior: 50627455!
addAccountsToReport: aReport

	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ]
	aReport yyy.! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:55:23'!
decrementSeparator

	aSeparator1 := aSeparator1 truncateTo: aSeparator1 size - 1.! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'NB 5/30/2023 23:55:23' prior: 50627461!
addPortfolio: aPortfolio

	reportLines add: aSeparator1, aPortfolio name.
	self incrementSeparator.
	aPortfolio addAccountsToReport: self.
	self decrementSeparator.
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NB 5/30/2023 23:55:23' prior: 50627479!
addAccountsToReport: aReport

	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ]
	aReport decrementSeparator.! !

!methodRemoval: PortfolioReport #yyy stamp: 'NB 5/30/2023 23:55:23'!
yyy

	aSeparator1 := aSeparator1 truncateTo: aSeparator1 size - 1.!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:55:39' prior: 50627491!
addPortfolio: aPortfolio

	reportLines add: aSeparator1, aPortfolio name.
	self incrementSeparator.
	aPortfolio addAccountsToReport: self.
! !
!Portfolio methodsFor: 'reports' stamp: 'NB 5/30/2023 23:55:49' prior: 50627500!
addAccountsToReport: aReport

	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ].
	aReport decrementSeparator.! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:56:46'!
addReceptiveAccount: anAccount

	reportLines add: aSeparator1, anAccount name.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'NB 5/30/2023 23:56:46' prior: 50627296!
addToPortfolioReport: aReport
	
	aReport addReceptiveAccount: self! !

!methodRemoval: PortfolioReport #addAccount: stamp: 'NB 5/30/2023 23:56:46'!
addAccount: anAccount

	reportLines add: aSeparator1, anAccount name.!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:57:37'!
addName: aPortfolio

	^ reportLines add: aSeparator1, aPortfolio name! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:57:37' prior: 50627512!
addPortfolio: aPortfolio

	self addName: aPortfolio.
	self incrementSeparator.
	aPortfolio addAccountsToReport: self.
! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/30/2023 23:57:56' prior: 50627526!
addReceptiveAccount: anAccount

	self addName: anAccount! !

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'NB 5/30/2023 23:58:28'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio reportLines aSeparator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'NB 5/30/2023 23:58:28' prior: 50627485!
decrementSeparator

	aSeparator := aSeparator truncateTo: aSeparator size - 1.! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'NB 5/30/2023 23:58:28' prior: 50627542!
addName: aPortfolio

	^ reportLines add: aSeparator, aPortfolio name! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'NB 5/30/2023 23:58:28' prior: 50627407!
incrementSeparator

	aSeparator:= aSeparator , ' '.! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'NB 5/30/2023 23:58:28' prior: 50627390!
generate

	reportLines:= OrderedCollection new.
	aSeparator:= ''.
	portfolio addToPortfolioReport: self.
	^reportLines.! !

----SNAPSHOT----(30 May 2023 23:58:32) CuisUniversity-5819.image priorSource: 9464107!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/30/2023 23:58:34'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/30/2023 23:58:34'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/30/2023 23:58:34'!
PASSED!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/31/2023 00:01:58'!
initPortfolio

	aSeparator:= aSeparator , ' '.! !
!PortfolioReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:01:58' prior: 50627547!
addPortfolio: aPortfolio

	self addName: aPortfolio.
	self initPortfolio.
	aPortfolio addAccountsToReport: self.
! !

!methodRemoval: PortfolioReport #incrementSeparator stamp: 'NB 5/31/2023 00:01:58'!
incrementSeparator

	aSeparator:= aSeparator , ' '.!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/31/2023 00:02:13'!
endPortfolio

	aSeparator := aSeparator truncateTo: aSeparator size - 1.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:02:13' prior: 50627519!
addAccountsToReport: aReport

	accounts do: [:anAccount | anAccount addToPortfolioReport: aReport ].
	aReport endPortfolio.! !

!methodRemoval: PortfolioReport #decrementSeparator stamp: 'NB 5/31/2023 00:02:13'!
decrementSeparator

	aSeparator := aSeparator truncateTo: aSeparator size - 1.!

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:05:52'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: 'anAccount reportLines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!AccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:05:52' prior: 50626545!
generate

	reportLines:= OrderedCollection new.
	anAccount addToReport: self.
	self addBalanceLine.
	^reportLines.
	
	! !
!AccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:05:52' prior: 50624653!
initializeFor: aReceptiveAccount 
	
	anAccount := aReceptiveAccount.! !
!AccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:05:52' prior: 50626272!
addBalanceLine

	^ reportLines add: 'Balance = ',anAccount balance asString! !

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:08:32'!
Report subclass: #TransferNetReport
	instanceVariableNames: 'anAccount transferNetAmount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!TransferNetReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:08:32' prior: 50626417!
initializeFor: aReceptiveAccount 
	
	anAccount := aReceptiveAccount.! !
!TransferNetReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:08:32' prior: 50626558!
generate
	
	transferNetAmount := 0.
	anAccount addToReport: self.
	^transferNetAmount.! !

!classDefinition: #AccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:09:23'!
Report subclass: #AccountSummaryReport
	instanceVariableNames: 'reportLines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #TransferNetReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:09:23'!
Report subclass: #TransferNetReport
	instanceVariableNames: 'transferNetAmount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:09:24'!
Object subclass: #Report
	instanceVariableNames: 'anAccount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:09:30'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/31/2023 00:09:33'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/31/2023 00:09:33'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/31/2023 00:09:33'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/31/2023 00:09:33'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/31/2023 00:09:33'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/31/2023 00:09:33'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:09:37'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/31/2023 00:09:39'!
PASSED!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/31/2023 00:09:42'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/31/2023 00:09:42'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/31/2023 00:09:42'!
PASSED!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/31/2023 00:09:45'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/31/2023 00:09:46'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/31/2023 00:09:46'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/31/2023 00:09:46'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/31/2023 00:09:46'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/31/2023 00:09:46'!
PASSED!

----SNAPSHOT----(31 May 2023 00:09:51) CuisUniversity-5819.image priorSource: 9470106!
!Report methodsFor: 'initialization' stamp: 'NB 5/31/2023 00:10:25'!
initializeFor: aReceptiveAccount 
	
	anAccount := aReceptiveAccount.! !

!methodRemoval: AccountSummaryReport #initializeFor: stamp: 'NB 5/31/2023 00:10:25'!
initializeFor: aReceptiveAccount 
	
	anAccount := aReceptiveAccount.!

!methodRemoval: TransferNetReport #initializeFor: stamp: 'NB 5/31/2023 00:10:25'!
initializeFor: aReceptiveAccount 
	
	anAccount := aReceptiveAccount.!
!Report methodsFor: 'initialization' stamp: 'NB 5/31/2023 00:11:03' prior: 50627981!
initializeFor: accountForReport 
	
	anAccount := accountForReport.! !

!classDefinition: #Report category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:11:23'!
Object subclass: #Report
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Report methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:11:23' prior: 50627996!
initializeFor: accountForReport 
	
	account := accountForReport.! !
!AccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:11:23' prior: 50627659!
addBalanceLine

	^ reportLines add: 'Balance = ',account balance asString! !
!AccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:11:23' prior: 50627645!
generate

	reportLines:= OrderedCollection new.
	account addToReport: self.
	self addBalanceLine.
	^reportLines.
	
	! !
!TransferNetReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:11:23' prior: 50627680!
generate
	
	transferNetAmount := 0.
	account addToReport: self.
	^transferNetAmount.! !

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:11:33'!
PASSED!
!Report class methodsFor: 'instance creation' stamp: 'NB 5/31/2023 00:11:51'!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount ! !

!methodRemoval: AccountSummaryReport class #for: stamp: 'NB 5/31/2023 00:11:51'!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount !

!methodRemoval: TransferNetReport class #for: stamp: 'NB 5/31/2023 00:11:51'!
for: aReceptiveAccount 
	
	^self new initializeFor: aReceptiveAccount !
!Report class methodsFor: 'instance creation' stamp: 'NB 5/31/2023 00:11:59' prior: 50628056!
for: anAccount 
	
	^self new initializeFor: anAccount ! !

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:12:14'!
PASSED!
!Report methodsFor: 'reports' stamp: 'NB 5/31/2023 00:12:48'!
addDeposit: aDeposit

	self subclassResponsibility .! !
!Report methodsFor: 'reports' stamp: 'NB 5/31/2023 00:13:03'!
addTransferReception: aTransferReception

	self subclassResponsibility .! !
!Report methodsFor: 'reports' stamp: 'NB 5/31/2023 00:13:16'!
addTransferSending: aTransferSending

	self subclassResponsibility .! !
!Report methodsFor: 'reports' stamp: 'NB 5/31/2023 00:13:27'!
addWithdraw: aWithdraw

	self subclassResponsibility .! !
!Report methodsFor: 'reports' stamp: 'NB 5/31/2023 00:13:35'!
generate

	self subclassResponsibility .! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/31/2023 00:14:07'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/31/2023 00:14:07'!
PASSED!
!Account methodsFor: 'reports' stamp: 'NB 5/31/2023 00:14:56'!
addToReport: aReport
	
	self subclassResponsibility .! !
!Account methodsFor: 'reports' stamp: 'NB 5/31/2023 00:15:21'!
addToPortfolioReport: aReport
	
	self subclassResponsibility .! !

----SNAPSHOT----(31 May 2023 00:17:23) CuisUniversity-5819.image priorSource: 9482478!

----SNAPSHOT----(31 May 2023 00:17:25) CuisUniversity-5819.image priorSource: 9491617!

----SNAPSHOT----(31 May 2023 00:18:26) CuisUniversity-5819.image priorSource: 9491705!

----SNAPSHOT----(31 May 2023 00:18:29) CuisUniversity-5819.image priorSource: 9491793!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/31/2023 00:18:39'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/31/2023 00:18:39'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/31/2023 00:18:39'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/31/2023 00:18:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/31/2023 00:18:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/31/2023 00:18:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/31/2023 00:18:40'!
PASSED!

----SNAPSHOT----(31 May 2023 00:18:43) CuisUniversity-5819.image priorSource: 9491881!
!TransferTest methodsFor: 'tests' stamp: 'NB 5/31/2023 00:20:56'!
test07CannotTransferToTheSameAccount
	
	|account|
	account:= ReceptiveAccount new.
	self should: [Transfer registrer: 100 from: account to: account. ]
		raise: Error
		withMessageText: Transfer cannotTransferAmountLessThanAPositiveNumber.! !
!TransferTest methodsFor: 'tests' stamp: 'NB 5/31/2023 00:21:09' prior: 50628414!
test07CannotTransferToTheSameAccount
	
	|account|
	account:= ReceptiveAccount new.
	self should: [Transfer registrer: 100 from: account to: account. ]
		raise: Error - MessageNotUnderstood 
		withMessageText: Transfer cannotTransferAmountLessThanAPositiveNumber.! !
!TransferTest methodsFor: 'tests' stamp: 'NB 5/31/2023 00:21:18' prior: 50628425!
test07CannotTransferToTheSameAccount
	
	|account|
	account:= ReceptiveAccount new.
	self should: [Transfer registrer: 100 from: account to: account. ]
		raise: Error
		withMessageText: Transfer cannotTransferAmountLessThanAPositiveNumber.! !
!TransferTest methodsFor: 'tests' stamp: 'NB 5/31/2023 00:21:30' prior: 50628436!
test07CannotTransferToTheSameAccount
	
	|account|
	account:= ReceptiveAccount new.
	self should: [Transfer registrer: 100 from: account to: account. ]
		raise: Error
		withMessageText: Transfer cannotTransferToTheSameAccountError.! !

!testRun: #TransferTest #test07CannotTransferToTheSameAccount stamp: 'NB 5/31/2023 00:21:37'!
ERROR!
!Transfer class methodsFor: 'error description' stamp: 'NB 5/31/2023 00:21:44'!
cannotTransferToTheSameAccountError
	self shouldBeImplemented.! !
!Transfer class methodsFor: 'error description' stamp: 'NB 5/31/2023 00:21:57' prior: 50628460!
cannotTransferToTheSameAccountError
	
	'No se puede transferir a la misma cuenta'.! !

!testRun: #TransferTest #test07CannotTransferToTheSameAccount stamp: 'NB 5/31/2023 00:22:02'!
FAILURE!
!Transfer class methodsFor: 'transfer' stamp: 'NB 5/31/2023 00:23:18' prior: 50623956!
registrer: anAmountToTransfer from: accountToWithdraw to: accountToDeposit 
	self assertAmountIsStrictlyPositive: anAmountToTransfer.
	
	accountToWithdraw = accountToDeposit ifTrue: [self error: self  ].
	
	^self new initializeFor: anAmountToTransfer from: accountToWithdraw to: accountToDeposit.
	! !
!Transfer class methodsFor: 'transfer' stamp: 'NB 5/31/2023 00:23:42' prior: 50628475!
registrer: anAmountToTransfer from: accountToWithdraw to: accountToDeposit 
	self assertAmountIsStrictlyPositive: anAmountToTransfer.
	
	accountToWithdraw = accountToDeposit ifTrue: [self error: self cannotTransferToTheSameAccountError ].
	
	^self new initializeFor: anAmountToTransfer from: accountToWithdraw to: accountToDeposit.
	! !

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/31/2023 00:23:45'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/31/2023 00:23:45'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/31/2023 00:23:45'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/31/2023 00:23:45'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/31/2023 00:23:45'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/31/2023 00:23:45'!
PASSED!

!testRun: #TransferTest #test07CannotTransferToTheSameAccount stamp: 'NB 5/31/2023 00:23:45'!
PASSED!
!Transfer class methodsFor: 'transfer' stamp: 'NB 5/31/2023 00:24:37'!
assertAccount: accountToDeposit isNotTheSameAs: accountToWithdraw

	^ accountToWithdraw = accountToDeposit ifTrue: [self error: self cannotTransferToTheSameAccountError ]! !
!Transfer class methodsFor: 'transfer' stamp: 'NB 5/31/2023 00:24:37' prior: 50628488!
registrer: anAmountToTransfer from: accountToWithdraw to: accountToDeposit 
	self assertAmountIsStrictlyPositive: anAmountToTransfer.
	
	self assertAccount: accountToDeposit isNotTheSameAs: accountToWithdraw.
	
	^self new initializeFor: anAmountToTransfer from: accountToWithdraw to: accountToDeposit.
	! !

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/31/2023 00:24:43'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/31/2023 00:24:43'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/31/2023 00:24:43'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/31/2023 00:24:43'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/31/2023 00:24:43'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/31/2023 00:24:43'!
PASSED!

!testRun: #TransferTest #test07CannotTransferToTheSameAccount stamp: 'NB 5/31/2023 00:24:43'!
PASSED!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

!testRun: #TransferTest #test07CannotTransferToTheSameAccount stamp: 'NB 5/31/2023 00:24:47'!
PASSED!

----SNAPSHOT----(31 May 2023 00:24:50) CuisUniversity-5819.image priorSource: 9496342!

----SNAPSHOT----(31 May 2023 00:25:35) CuisUniversity-5819.image priorSource: 9506085!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

!testRun: #TransferTest #test07CannotTransferToTheSameAccount stamp: 'NB 5/31/2023 00:25:39'!
PASSED!

----SNAPSHOT----(31 May 2023 00:26:32) CuisUniversity-5819.image priorSource: 9506173!

!classRenamed: #PortfolioReport as: #PortfolioAccountSummaryReport stamp: 'NB 5/31/2023 00:29:35'!
Smalltalk renameClassNamed: #PortfolioReport as: #PortfolioAccountSummaryReport!
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:29:35' prior: 50627059!
test02


	|myAccount familyPortfolio|
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount.

	self assert: (OrderedCollection with:'Portfolio de la familia' with: ' Cuenta mia')
		 equals: (PortfolioAccountSummaryReport for: familyPortfolio) generate.! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:29:35' prior: 50627120!
test03


	|myAccount familyPortfolio johnsAccount angiesAccount childrenPortfolio|
	johnsAccount := ReceptiveAccount named: 'Cuenta de Juan'.
	angiesAccount := ReceptiveAccount named: 'Cuenta de Angeles'.
	childrenPortfolio := Portfolio named: 'Portfolio de hijos' with: johnsAccount with: angiesAccount.
	myAccount := ReceptiveAccount named: 'Cuenta mia'.
	familyPortfolio := Portfolio named: 'Portfolio de la familia' with: myAccount with: childrenPortfolio.

	self assert: (OrderedCollection 
				with:'Portfolio de la familia' 
				with: ' Cuenta mia'
				with: ' Portfolio de hijos'
				with: '  Cuenta de Juan'
				with: '  Cuenta de Angeles'
		)
		 equals: (PortfolioAccountSummaryReport for: familyPortfolio) generate.! !
!PortfolioReportTest methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:29:35' prior: 50626706!
test01

	self assert: (OrderedCollection with:'Portfolio de la familia')
		 equals: (PortfolioAccountSummaryReport for: (Portfolio named: 'Portfolio de la familia')) generate.! !

Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio reportLines aSeparator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:30:05'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio reportLines aSeparator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

Object subclass: #PortfolioReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:30:11'!
Object subclass: #PortfolioReport
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

PortfolioReport subclass: #PortfolioAccountSummaryReport
	instanceVariableNames: 'portfolio reportLines aSeparator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioAccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:30:28'!
PortfolioReport subclass: #PortfolioAccountSummaryReport
	instanceVariableNames: 'portfolio reportLines aSeparator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReport class methodsFor: 'instance creation' stamp: 'NB 5/31/2023 00:30:45'!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio ! !

!methodRemoval: PortfolioAccountSummaryReport class #for: stamp: 'NB 5/31/2023 00:30:45'!
for: aPortfolio 
	
	^self new initializeFor: aPortfolio !

!classDefinition: #PortfolioAccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:31:15'!
PortfolioReport subclass: #PortfolioAccountSummaryReport
	instanceVariableNames: 'reportLines aSeparator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:31:15'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioReport methodsFor: 'initialization' stamp: 'NB 5/31/2023 00:31:21'!
initializeFor: aPortfolio 
	
	portfolio := aPortfolio.! !

!methodRemoval: PortfolioAccountSummaryReport #initializeFor: stamp: 'NB 5/31/2023 00:31:21'!
initializeFor: aPortfolio 
	
	portfolio := aPortfolio.!

!classDefinition: #PortfolioAccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:32:05'!
PortfolioReport subclass: #PortfolioAccountSummaryReport
	instanceVariableNames: 'aSeparator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:32:05'!
Object subclass: #PortfolioReport
	instanceVariableNames: 'portfolio reportLines'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #PortfolioAccountSummaryReport category: 'Portfolio-Solucion' stamp: 'NB 5/31/2023 00:32:15'!
PortfolioReport subclass: #PortfolioAccountSummaryReport
	instanceVariableNames: 'separator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!PortfolioAccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:32:15' prior: 50627574!
addName: aPortfolio

	^ reportLines add: separator, aPortfolio name! !
!PortfolioAccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:32:15' prior: 50627602!
initPortfolio

	separator:= separator , ' '.! !
!PortfolioAccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:32:15' prior: 50627618!
endPortfolio

	separator := separator truncateTo: separator size - 1.! !
!PortfolioAccountSummaryReport methodsFor: 'as yet unclassified' stamp: 'NB 5/31/2023 00:32:15' prior: 50627585!
generate

	reportLines:= OrderedCollection new.
	separator:= ''.
	portfolio addToPortfolioReport: self.
	^reportLines.! !
!PortfolioReport methodsFor: 'initialization' stamp: 'NB 5/31/2023 00:33:05'!
addPortfolio: aPortfolio
	
	self subclassResponsibility .! !
!PortfolioReport methodsFor: 'initialization' stamp: 'NB 5/31/2023 00:33:17'!
addReceptiveAccount: anAccount
	
	self subclassResponsibility .! !

!methodRemoval: PortfolioReport #addPortfolio: stamp: 'NB 5/31/2023 00:34:39'!
addPortfolio: aPortfolio
	
	self subclassResponsibility .!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/31/2023 00:34:43'!
addPortfolio: aPortfolio

	self addName: aPortfolio.
	self initPortfolio.
	aPortfolio addAccountsToReport: self.
! !

!methodRemoval: PortfolioAccountSummaryReport #addPortfolio: stamp: 'NB 5/31/2023 00:34:43'!
addPortfolio: aPortfolio

	self addName: aPortfolio.
	self initPortfolio.
	aPortfolio addAccountsToReport: self.
!
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/31/2023 00:35:06'!
initPortfolio

	self subclassResponsibility .! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/31/2023 00:35:41' prior: 50629056!
addReceptiveAccount: anAccount

	self subclassResponsibility .
! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/31/2023 00:36:39'!
addName: aPortfolio

	self subclassResponsibility .
! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/31/2023 00:37:02'!
generate

	self subclassResponsibility .! !
!PortfolioReport methodsFor: 'reports' stamp: 'NB 5/31/2023 00:37:27'!
endPortfolio

	self subclassResponsibility .! !

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/31/2023 00:39:16'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/31/2023 00:39:16'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/31/2023 00:39:16'!
PASSED!

----SNAPSHOT----(31 May 2023 00:41:28) CuisUniversity-5819.image priorSource: 9510737!

!testRun: #PortfolioReportTest #test01 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioReportTest #test02 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioReportTest #test03 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test01BalanceOfPortfolioWithoutAccountsIsZero stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test02BalanceOfPortfolioWithAccountsIsSumOfAccountsBalance stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test03BalanceOfPortfolioIsCalculatedRecursivelyOnPortfolios stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithoutAccountsHasNoRegisteredTransaction stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredItsAccountsTransactions stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioLooksForRegisteredTransactionsRecursively stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioHasNoTransactionWhenHasNoAccounts stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTransactionsIncludesAllItsAccountsTransactions stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioTransactionsAreCalculatedRecursively stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCanNotIncludeTheSameAccountMoreThanOnce stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioCanNotIncludeAccountOfItsPortfolios stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioCanNotIncludeItself stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test13ComposedPortfolioCanNotHaveParentPortfolioAccount stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test14ComposedPortfolioCanNotHaveAccountOfAnyRootParentRecursively stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioCanNotIncludeAnyOfTheComposedAccountOfPortfolioToAdd stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test01 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test02 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test03 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test04 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test05 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test06 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test07 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test08 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test09 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #ReportTest #test10 stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #TransferTest #test01TransferCorrectlyDecreasesSenderBalanceAndIncreasesReceiverBalanceForTheAmountTransfered stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #TransferTest #test02SenderAccountCorrectlyRegistersATransferSending stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #TransferTest #test03ReceptionAccountCorrectlyRegistersATransferReception stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #TransferTest #test04TransferSendingCanReachTheTransfer stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #TransferTest #test05TransferReceptionCanReachTheTransfer stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #TransferTest #test06CannotTransferAnAmountThatItIsNotAStrictlyPositiveNumber stamp: 'NB 5/31/2023 00:41:32'!
PASSED!

!testRun: #TransferTest #test07CannotTransferToTheSameAccount stamp: 'NB 5/31/2023 00:41:32'!
PASSED!